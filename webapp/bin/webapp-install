#!/bin/bash

WEBAPP_DATA="$HOME/.local/share/sway-webapp"
APPS_DIR="$HOME/.local/share/applications"
ICONS_DIR="$WEBAPP_DATA/icons"
DATA_DIR="$WEBAPP_DATA/data"

mkdir -p "$APPS_DIR" "$ICONS_DIR" "$DATA_DIR"

detect_browser() {
    local default_browser=$(xdg-settings get default-web-browser 2>/dev/null)
    
    if [[ -z "$default_browser" ]]; then
        for browser in google-chrome-stable chromium chrome brave firefox; do
            if command -v "$browser" &> /dev/null; then
                echo "$browser"
                return
            fi
        done
        echo "chromium"
        return
    fi
    
    case "$default_browser" in
        *chrome*|google-chrome*)
            echo "google-chrome-stable"
            ;;
        *chromium*)
            echo "chromium"
            ;;
        *brave*)
            echo "brave"
            ;;
        *firefox*)
            echo "firefox"
            ;;
        *)
            echo "chromium"
            ;;
    esac
}

get_browser_flags() {
    local browser="$1"
    local url="$2"
    
    case "$browser" in
        firefox)
            echo "--new-window --class=\"WebApp\" \"$url\""
            ;;
        *)
            echo "--app=\"$url\" --class=WebApp"
            ;;
    esac
}

TEMP_SCRIPT="/tmp/webapp-script-$$"
TEMP_OUTPUT="/tmp/webapp-output-$$"
trap "rm -f $TEMP_SCRIPT $TEMP_OUTPUT" EXIT

notify-send "Web App Installer" "A terminal will open for input.\nYou can switch to your browser to copy URLs!" -t 4000
sleep 1

cat > "$TEMP_SCRIPT" << 'SCRIPT'
#!/bin/bash
OUTPUT_FILE="$1"
echo ""
echo "╔════════════════════════════════════════════════════════════╗"
echo "║          WEB APP INSTALLER - Step 1 of 3                  ║"
echo "╚════════════════════════════════════════════════════════════╝"
echo ""
echo "You can switch to your browser (Super+h/l) to copy URLs!"
echo ""
echo -n "App Name (e.g., GitHub): "
read -r app_name
echo "$app_name" > "$OUTPUT_FILE"
SCRIPT
chmod +x "$TEMP_SCRIPT"
foot -T "Web App Installer" -e "$TEMP_SCRIPT" "$TEMP_OUTPUT"
app_name=$(cat "$TEMP_OUTPUT" 2>/dev/null | tr -d '\n\r')

if [[ -z "$app_name" ]]; then
    notify-send "Web App" "Installation cancelled"
    exit 0
fi

cat > "$TEMP_SCRIPT" << 'SCRIPT'
#!/bin/bash
OUTPUT_FILE="$1"
echo ""
echo "╔════════════════════════════════════════════════════════════╗"
echo "║          WEB APP INSTALLER - Step 2 of 3                  ║"
echo "╚════════════════════════════════════════════════════════════╝"
echo ""
echo "Switch to your browser to copy the URL if needed!"
echo ""
echo -n "App URL (e.g., https://github.com): "
read -r app_url
echo "$app_url" > "$OUTPUT_FILE"
SCRIPT
chmod +x "$TEMP_SCRIPT"
foot -T "Web App Installer" -e "$TEMP_SCRIPT" "$TEMP_OUTPUT"
app_url=$(cat "$TEMP_OUTPUT" 2>/dev/null | tr -d '\n\r')

if [[ -z "$app_url" ]]; then
    notify-send "Web App" "Installation cancelled"
    exit 0
fi

if [[ ! "$app_url" =~ ^https?:// ]]; then
    app_url="https://$app_url"
fi

cat > "$TEMP_SCRIPT" << 'SCRIPT'
#!/bin/bash
OUTPUT_FILE="$1"
echo ""
echo "╔════════════════════════════════════════════════════════════╗"
echo "║          WEB APP INSTALLER - Step 3 of 3                  ║"
echo "╚════════════════════════════════════════════════════════════╝"
echo ""
echo "Visit: https://github.com/walkxcode/dashboard-icons"
echo "Right-click an icon → Copy Image Address"
echo ""
echo -n "Icon URL (paste from dashboardicons.com): "
read -r icon_url
echo "$icon_url" > "$OUTPUT_FILE"
SCRIPT
chmod +x "$TEMP_SCRIPT"
foot -T "Web App Installer" -e "$TEMP_SCRIPT" "$TEMP_OUTPUT"
icon_input=$(cat "$TEMP_OUTPUT" 2>/dev/null | tr -d '\n\r')

if [[ -z "$icon_input" ]]; then
    notify-send "Web App" "Installation cancelled"
    exit 0
fi

app_id=$(echo "$app_name" | tr '[:upper:]' '[:lower:]' | tr ' ' '-' | sed 's/[^a-z0-9-]//g')
icon_path="$ICONS_DIR/$app_id.png"

if [[ "$icon_input" =~ ^https?:// ]]; then
    curl -s -L "$icon_input" -o "$icon_path"
    if [[ $? -ne 0 ]]; then
        notify-send "Web App" "Failed to download icon"
        exit 1
    fi
elif [[ -f "$icon_input" ]]; then
    cp "$icon_input" "$icon_path"
else
    notify-send "Web App" "Invalid icon path"
    exit 1
fi

browser=$(detect_browser)
browser_flags=$(get_browser_flags "$browser" "$app_url")

cat > "$APPS_DIR/webapp-$app_id.desktop" <<EOF
[Desktop Entry]
Version=1.0
Type=Application
Name=$app_name
Comment=Web App: $app_name
Exec=$browser $browser_flags
Icon=$icon_path
Categories=WebApp;Network;
Terminal=false
StartupWMClass=WebApp
EOF

chmod +x "$APPS_DIR/webapp-$app_id.desktop"

if command -v update-desktop-database &> /dev/null; then
    update-desktop-database "$APPS_DIR" 2>/dev/null
fi

pkill wofi
sleep 0.5

notify-send "Web App Installed" "$app_name is now in your launcher!\nPress Super+Space to find it."

